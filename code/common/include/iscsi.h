/******************************************************************************** Copyright (c) 2011，中兴通讯股份有限公司，All rights reserved.* * 文件名称：iscsi_initiator.h* 文件标识：见配置管理计划书* 内容摘要：* 当前版本：1.0* 作    者：王德恩* 完成日期：2012.03.01** 修改记录1：*    修改日期：2012.03.01*    版 本 号：V1.0*    修 改 人：王德恩*    修改内容：创建*******************************************************************************/#ifndef ISCSI_H#define ISCSI_H#include "sky.h"//##########################################//#### 常量定义                  ###########//###########################################define  LOCALSAN    "LOCALSAN"#define  IPSAN       "IPSAN"#define   TARGETID_DIR        "/var/run/tecs/target_id/"const string STR_CMD_ISCSI_LINE = " | ";//<=== 命令连接需要 "|" 如iscsiadm后面加grep需要 |const string STR_CMD_ISCSI_GREP ="grep ";const string STR_CMD_ISCSIADM_SEDNULL = "sed ':t;N;s/\\n//;s/:3260,.//;s/scsi//;b t' | sed -e '/^$/d'";//发现iscis服务器const string STR_CMD_ISCSIADM_DISCOVERY = "iscsiadm -m discovery -t sendtargets -p ";//const string STR_CMD_ISCSIADM_AWK = "awk '{{print \"[\"; print $1;print \"]\";print \"{\"; print $2;print \"}\"}}'"; const string STR_CMD_ISCSIADM_AWK = "awk '{print $2}'"; //登录、登出、刷新iscis服务器const string STR_CMD_ISCSIADM_NODE = "iscsiadm -m node ";const string STR_CMD_ISCSIADM_TARGET = " -T ";//后接targernameconst string STR_CMD_ISCSIADM_P = " -p ";//后接 ip:portconst string STR_CMD_ISCSIADM_LOGIN = " -l ";//登录服务器const string STR_CMD_ISCSIADM_LOGOUT = " -u ";//登出服务器const string STR_CMD_ISCSIADM_REFRESH = " -R ";//刷新服务器const string STR_CMD_ISCSIADM_REC = " -o ";//增加删除target记录//获取Target Lun disk信息const string STR_CMD_ISCSIADM_SESSION = "iscsiadm -m session -P 3 ";const string STR_CMD_ISCSIADM_SESSION_LOCAL_GREP = "grep [LTkP] | grep -v Iface | grep -v iSCSI | grep -v Length | grep -v R2T | grep -v \"Lun: 0\" | grep -v SCSI |grep -v Persistent |grep -v Timeout |grep -v Abort ";const string STR_CMD_ISCSIADM_SESSION_GREP = "grep [LTkP] | grep -v Iface | grep -v iSCSI | grep -v Length | grep -v R2T | grep -v SCSI |grep -v Persistent |grep -v Timeout |grep -v Abort ";const string STR_CMD_ISCSIADM_SESSION_AWK  = "awk '{if($1==\"Target:\"){print \"{\"; print $2;print \"}\" }else{if($1==\"Current\"){print\"@\";print $3;print\"@\"}else{if($1==\"Attached\"){print \"(\"; print $4;print \")\" }else {if($2==\"Channel\"){print \"[\";print $7;print \"]\" }}}}}' ";const string STR_ISCSI_BIG_BRACKET_LEFT = "{";const string STR_ISCSI_BIG_BRACKET_RIGHT = "}";const string STR_ISCSI_MID_BRACKET_LEFT = "[";const string STR_ISCSI_MID_BRACKET_RIGHT = "]";const string STR_ISCSI_SMALL_BRACKET_LEFT = "(";const string STR_ISCSI_SMALL_BRACKET_RIGHT = ")";const  string iscsi_node_path="/var/lib/iscsi/nodes/";//打印级别levelconst int LOG_SCSI_ERROR = 5;         // 5：错误级别const int LOG_SCSI_DEBUG = 7;         // 7：调试级别const string LOG_SCSI_STRHEAD= "<scsi>";const int G_SCSI_CHARNUM = 2048;const int SCSI_PASSED=0;//通过const int SCSI_FAILED=1;//不通过const int SCSI_LOGIN=0; //登入const int SCSI_LOGOUT=1; //登出const int SCSI_REFEASH=2; //刷新const int REC_NEW=0; //登入const int REC_DELETE=1; //登出//函数返回值const int ISCSIADM_SUCESS=0;//成功const int ISCSIADM_PARAMATE_FAIL=1;  //入参错误const int ISCSIADM_SYSTEM_FAIL=9999;  //执行命令错误const int ISCSIADM_MATCH_TARGET_FAIL=11;  //匹配target错误 没有对应的targetconst int ISCSIADM_MATCH_LUN_FAIL=12;  //匹配Lun错误 target没有对应的Lunconst int ISCSIADM_MATCH_DEVICE_FAIL=13;  //匹配设备错误 target、Lun没有对应的设备const int ISCSIADM_MATCH_CMD_FAIL=14;  //解析命令失败const int ISCSIADM_ALREADY_LOGIN=21;  //已经登入服务端const int ISCSIADM_ALREADY_NOTLOGIN=22;  //没有登入服务端const int ISCSIADM_NOT_DISCOVERY_SCSISERVER=23;  //没有发现SCSI服务//##########################################//#### 全局变量定义              ###########//##########################################extern int isSCSIDebugPrint;//是否进行debug打印，0:不打印,1:打印//##########################################//#### 函数声明                  ###########//##########################################//#####实现函数######    /**************************************************************************/    /**    @brief 功能描述:根据TargetName、Lun获取设备名称DeviceName    @li @b 入参列表：    @verbatim       string strTargetName:TargetName       int iLun :Lun编号(1-255)    @endverbatim        @li @b 出参列表：    @verbatim       string  strDeviceName:设备名称    @endverbatim    @li @b 返回值列表：    @verbatim        ISCSIADM_SUCESS            0 成功        ISCSIADM_MATCH_TARGET_FAIL 1 匹配target错误 没有对应的target        ISCSIADM_MATCH_LUN_FAIL    2 匹配Lun错误 target没有对应的Lun        ISCSIADM_MATCH_DEVICE_FAIL 3 匹配设备错误 target、Lun没有对应的设备    @endverbatim    @li @b 接口限制：无    @li @b 其它说明：无    */    /**************************************************************************/int iscsiadmGetLunDeviceName(const string &ip,const string &strTargetName,int iLun,string &strDeviceName);/**************************************************************************/    /**    @brief 功能描述:登入、登出、刷新iscis服务器        @li @b 入参列表：    @verbatim       int iType:类型，目前取值为                      SCSI_LOGIN   0 登入                      SCSI_LOGOUT  1 登出                      SCSI_REFEASH 2 刷新       string strServerIP:SCSI服务IP       int iServerPort:SCSI服务端口号       string strTargetName:TargetName    @endverbatim        @li @b 出参列表：    @verbatim       无    @endverbatim    @li @b 返回值列表：    @verbatim        ISCSIADM_SUCESS                     0  成功        SCSIADM_ALREADY_LOGIN              11  已经登入服务端        ISCSIADM_ALREADY_NOTLOGIN          12  没有登入服务端        ISCSIADM_NOT_DISCOVERY_SCSISERVER  13  没有发现SCSI服务        ISCSIADM_SYSTEM_FAIL              255  执行命令错误    @endverbatim    @li @b 接口限制：无    @li @b 其它说明：无    */    /**************************************************************************/int iscsiadmScsiServer(const string &satype,int iType,const string &strServerIP,string &targetName,vector<int> & vec_lunid,Mutex &login_mutex);/**************************************************************************/    /**    @brief 功能描述:判断是能够发现指定iscis服务器         @li @b 入参列表：    @verbatim       string strServerIP:SCSI服务IP       string iServerPort:SCSI服务端口号       string strTargetName:TargetName    @endverbatim        @li @b 出参列表：    @verbatim       无    @endverbatim    @li @b 返回值列表：    @verbatim        ture:能够发现        false:不能发现    @endverbatim    @li @b 接口限制：无    @li @b 其它说明：无    */    /**************************************************************************/bool isDiscoveryScsiServer(const string & strServerIP,const string & strServerPort,string & strTargetName);/**************************************************************************/    /**    @brief 功能描述:判断是否已经连接iscis服务器        @li @b 入参列表：    @verbatim       string strServerIP:SCSI服务IP       string iServerPort:SCSI服务端口号       string strTargetName:TargetName    @endverbatim        @li @b 出参列表：    @verbatim       无    @endverbatim    @li @b 返回值列表：    @verbatim        ture:已经连接        false:没有连接    @endverbatim    @li @b 接口限制：无    @li @b 其它说明：无    */    /**************************************************************************/bool isLoginScsiServer(const string &satype,const string &strServerIP,string & strServerPort, const string &strTargetName);bool splitLunDisk(const string &strTmp);//#####通用函数######bool scsiSystem(const string &sCommand);bool strSplit(const string& strOld,                     const string& strMatch,                     bool isRemoveEmpty,                     bool isFullMatch,                     vector<string> &vStrResult);bool getSubStrByMatch(const string &strTmp,                             const string &strMatch,                             const string &strNextMatch,                             string &strSubStr);bool deleteStrLastChar(const string &str,string &strRes,string &strLast);bool getmultipath_name(const string & device,string &name);bool GetIscsiName(string &iscsiname);int  GetTargetStatus(const string &satype,const string &strTargetName,const string &ip,bool &empty);int  iscsiadmDelDevice(const string &satype, string &strTargetName,const string &ip,int iLun);int  GetTargetNameByIp(const string &ip, string &strTargetName);int  update_iscsirec(bool add,string &target_name,vector<int> & vec_lunid);void  guard_iscsirec();#endif//***********************//***     END         ***//***********************