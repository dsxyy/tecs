/*******************************************************************************
* Copyright (c) 2011，中兴通讯股份有限公司，All rights reserved.
* 
* 文件名称：simulate_driver.cpp
* 文件标识：
* 内容摘要：SimulateDriver类的实现文件
* 当前版本：1.0
* 作    者：lixch
* 完成日期：2011年7月25日
*
* 修改记录1：
*     修改日期：2011/7/25
*     版 本 号：V1.0
*     修 改 人：lixch
*     修改内容：创建
*******************************************************************************/

#include "simulate_driver.h"
#include <sys/types.h>
#include <sys/stat.h>
#include <unistd.h>
#include <fcntl.h>
#include <string> 
#include <iostream>
#include <stdio.h>
#include "simulate_driver.h"
#include "vm_driver_simulate.h"


/*****************************************************************************
 *                               全局变量                                    *
 ****************************************************************************/

/****************************************************************************************
* 函数名称：Init
* 功能描述：初始化虚拟化驱动
* 访问的表：无
* 修改的表：无
* 输入参数：无
* 输出参数：
* 返 回 值：
* 其它说明：无
* 修改日期      版本号  修改人      修改内容
* ---------------------------------------------------------------------------------------
* 2011/08/12    V1.0    lixch         创建
****************************************************************************************/
int SimulateDriver::Init()
{
    return SUCCESS;
}

bool SimulateDriver::SimulateIsOk()
{
    return SimulateIsExist();
}

/****************************************************************************************
* 函数名称：Init
* 功能描述：初始化虚拟化驱动
* 访问的表：无
* 修改的表：无
* 输入参数：无
* 输出参数：
* 返 回 值：
* 其它说明：无
* 修改日期      版本号  修改人      修改内容
* ---------------------------------------------------------------------------------------
* 2011/08/12    V1.0    lixch         创建
****************************************************************************************/
string SimulateDriver::CreateConfig(const string vm_ins_name, VMConfig &vm_cfg)
{
    XmlParser xml;
    xml.Create("domain");
    xml.SetAttr("type","simulate");    

    xml.Write("name",vm_ins_name);
    xml.Write("description", to_string<uint32>(vm_cfg._config_version,dec));

    if((!vm_cfg._virt_type.compare("pvm"))&&(!vm_cfg._machine._source.empty()))
    {
        xml.Write("bootloader","/usr/bin/pygrub");
    }
    
    return xml.DocToString();
}

/****************************************************************************************
* 函数名称：InvertToVmState
* 功能描述：模拟器值返回的状态转换函数
* 访问的表：无
* 修改的表：无
* 输入参数：无g
* 输出参数：
* 返 回 值：
* 其它说明：无
* 修改日期      版本号  修改人      修改内容
* ---------------------------------------------------------------------------------------
* 2011/08/12    V1.0    lixch         创建
****************************************************************************************/
VmInstanceState SimulateDriver::InvertToVmState(int state_in)
{
    switch(state_in)
    {
        case SIMULATE_NO_STATE:
        case SIMULATE_RUNNING:
        case SIMULATE_BLOCKED:
        {
            return VM_RUNNING;
            break;
        }
        case SIMULATE_PAUSED:
        {
            return VM_PAUSED;
            break;
        }
        case SIMULATE_SHUTDOWN:
        case SIMULATE_SHUTOFF:
        {
            return VM_SHUTOFF;
            break;
        }
        case SIMULATE_CRASHED:
        {
            return VM_CRASHED;
            break;
        }
        default:
            // 有可能输入一个-1，表示外部执行查询libvirt失败
            return VM_SHUTOFF;
    }
}

/****************************************************************************************
* 函数名称：Create
* 功能描述：创建运行虚拟机实例
* 访问的表：无
* 修改的表：无
* 输入参数：无
* 输出参数：
* 返 回 值：
* 其它说明：无
* 修改日期      版本号  修改人      修改内容
* ---------------------------------------------------------------------------------------
* 2011/08/12    V1.0    lixch         创建
****************************************************************************************/
bool SimulateDriver::Create(const string& xml, int *domid)
{
    string name;
    string desc;
    XmlParser xml_format;

    xml_format.Locate(xml, "domain");
    xml_format.Read("name", name);
    xml_format.Read("description", desc);

    *domid = SimDomCreate(name);
    if (*domid == -1)
    {
        return false;
    }
    SimDomSetDesc(name, desc);
    return true;
}

/****************************************************************************************
* 函数名称：Reboot
* 功能描述：重启虚拟机实例
* 访问的表：无
* 修改的表：无
* 输入参数：无
* 输出参数：
* 返 回 值：
* 其它说明：无
* 修改日期      版本号  修改人      修改内容
* ---------------------------------------------------------------------------------------
* 2011/08/12    V1.0    lixch         创建
****************************************************************************************/
int SimulateDriver::Reboot(const string& instance_name)
{
    return SimDomReboot(instance_name);
}

/****************************************************************************************
* 函数名称：Suspend
* 功能描述：暂停虚拟机实例
* 访问的表：无
* 修改的表：无
* 输入参数：无
* 输出参数：
* 返 回 值：
* 其它说明：无
* 修改日期      版本号  修改人      修改内容
* ---------------------------------------------------------------------------------------
* 2011/08/12    V1.0    lixch         创建
****************************************************************************************/
int SimulateDriver::Suspend(const string& instance_name)
{
    return SimDomSuspend(instance_name);
}

/****************************************************************************************
* 函数名称：Resume
* 功能描述：恢复运行虚拟机实例
* 访问的表：无
* 修改的表：无
* 输入参数：无
* 输出参数：
* 返 回 值：
* 其它说明：无
* 修改日期      版本号  修改人      修改内容
* ---------------------------------------------------------------------------------------
* 2011/08/12    V1.0    lixch         创建
****************************************************************************************/
int SimulateDriver::Resume(const string& instance_name)
{
    return SimDomResume(instance_name);
}

/****************************************************************************************
* 函数名称：Shutdown
* 功能描述：关闭运行虚拟机实例
* 访问的表：无
* 修改的表：无
* 输入参数：无
* 输出参数：
* 返 回 值：
* 其它说明：无
* 修改日期      版本号  修改人      修改内容
* ---------------------------------------------------------------------------------------
* 2011/08/12    V1.0    lixch         创建
****************************************************************************************/
int SimulateDriver::ShutDown(const string& instance_name)
{
    return SimDomShutDown(instance_name);
}

/****************************************************************************************
* 函数名称：Reset
* 功能描述：虚拟机强制重启命令
* 访问的表：无
* 修改的表：无
* 输入参数：无
* 输出参数：
* 返 回 值：
* 其它说明：无
* 修改日期      版本号  修改人      修改内容
* ---------------------------------------------------------------------------------------
* 2012/06/1    V1.0     lixiaocheng        创建
****************************************************************************************/
int SimulateDriver::Reset(const string& instance_name, const string& cfg_file_name)
{

    return SimDomReboot(instance_name);

}

/****************************************************************************************
* 函数名称：VcpuPinSet
* 功能描述：虚拟CPU的bind接口
* 访问的表：无
* 修改的表：无
* 输入参数：domid  虚拟机id    VcpuNum  虚拟CPU数量   
* 输出参数：
* 返 回 值：
* 其它说明：无
* 修改日期      版本号  修改人      修改内容
* ---------------------------------------------------------------------------------------
* 2012/02/12    V1.0    lxc         创建
****************************************************************************************/
int SimulateDriver::VcpuAffinitySet(const string &dom_name, unsigned int VcpuNum)
{
    return 0;
}

/****************************************************************************************
* 函数名称：Sched_credit_weight_set
* 功能描述：虚拟机权重设置
* 访问的表：无
* 修改的表：无
* 输入参数：domid  虚拟机id    percent 权重百分比
* 输出参数：
* 返 回 值：
* 其它说明：无
* 修改日期      版本号  修改人      修改内容
* ---------------------------------------------------------------------------------------
* 2012/02/12    V1.0    lxc         创建
****************************************************************************************/
int SimulateDriver::Sched_credit_weight_set(int id, unsigned int percent)
{
    string name = GetDomainNameByDomid(id);
    
    return Sched_credit_weight_set(name, percent);
}


/****************************************************************************************
* 函数名称：Sched_credit_weight_set
* 功能描述：虚拟机权重设置
* 访问的表：无
* 修改的表：无
* 输入参数：domid  虚拟机id    percent 权重百分比
* 输出参数：
* 返 回 值：
* 其它说明：无
* 修改日期      版本号  修改人      修改内容
* ---------------------------------------------------------------------------------------
* 2012/02/12    V1.0    lxc         创建
****************************************************************************************/
int SimulateDriver::Sched_credit_weight_set(const string &dom_name, unsigned int percent)
{
    return 0;
}

/****************************************************************************************
* 函数名称：Sched_credit_cap_set
* 功能描述：虚拟机的cap设置
* 访问的表：无
* 修改的表：无
* 输入参数：domid  虚拟机id    CoreNum  核数  percent 权重百分比
* 输出参数：
* 返 回 值：
* 其它说明：无
* 修改日期      版本号  修改人      修改内容
* ---------------------------------------------------------------------------------------
* 2012/02/12    V1.0    lxc         创建
****************************************************************************************/
int SimulateDriver::Sched_credit_cap_set(const string &dom_name, int CoreNum, unsigned int percent)
{
    return 0;
}

/****************************************************************************************
* 函数名称：Migrate
* 功能描述：迁移虚拟机实例
* 访问的表：无
* 修改的表：无
* 输入参数：无
* 输出参数：
* 返 回 值：
* 其它说明：无
* 修改日期      版本号  修改人      修改内容
* ---------------------------------------------------------------------------------------
* 2011/12/31    V1.0    lixch         创建
****************************************************************************************/
int SimulateDriver::Migrate(const string& instance_name, const string& host_ip)
{
    return 0;
}

/****************************************************************************************
* 函数名称：GetDomainInfo
* 功能描述：根据实例名获得虚拟机实例的相关信息
* 访问的表：无
* 修改的表：无
* 输入参数：无
* 输出参数：
* 返 回 值：
* 其它说明：无
* 修改日期      版本号  修改人      修改内容
* ---------------------------------------------------------------------------------------
* 2011/08/12    V1.0    lixch         创建
****************************************************************************************/
int SimulateDriver::GetDomainInfo(const string& dom_name, VmDomainInfo &DomInfo)
{
    DomInfo.cpuTime = 10000;
    DomInfo.state = InvertToVmState(SimDomGetState(dom_name));
    DomInfo.maxMem = 1024;
    DomInfo.memory = 1024;
    DomInfo.nrVirtCpu = 2;
    return 0;
}

/****************************************************************************************
* 函数名称：ListDomains
* 功能描述：列出当前运行的虚拟机实例
* 访问的表：无
* 修改的表：无
* 输入参数：无
* 输出参数：
* 返 回 值：
* 其它说明：无
* 修改日期      版本号  修改人      修改内容
* ---------------------------------------------------------------------------------------
* 2011/08/12    V1.0    lixch         创建
****************************************************************************************/
int SimulateDriver::ListDomains(int* ids)
{
    return SimListAllDom(ids);
}

/****************************************************************************************
* 函数名称：GetDomainNameByDomid
* 功能描述：根据实例句柄获得实例名
* 访问的表：无
* 修改的表：无
* 输入参数：无
* 输出参数：
* 返 回 值：
* 其它说明：无
* 修改日期      版本号  修改人      修改内容
* ---------------------------------------------------------------------------------------
* 2011/08/12    V1.0    lixch         创建
****************************************************************************************/
string SimulateDriver::GetDomainNameByDomid(int id)
{
    string domname;

    SimDomGetName(id, domname);
    return domname;
}

/****************************************************************************************
* 函数名称：GetDomainNetInfoById
* 功能描述：根据实例句柄获得实例名
* 访问的表：无
* 修改的表：无
* 输入参数：无
* 输出参数：
* 返 回 值：
* 其它说明：无
* 修改日期      版本号  修改人      修改内容
* ---------------------------------------------------------------------------------------
* 2011/08/12    V1.0    lixch         创建
****************************************************************************************/
int SimulateDriver::GetDomainNetInfoById(int domid, uint32 nic_no, 
                                   VmDomainInterfaceStatsStruct& info)
{
        return 0;
}


/****************************************************************************************
* 函数名称：GetDomainState
* 功能描述：根据实例句柄获得虚拟机实例状态
* 访问的表：无
* 修改的表：无
* 输入参数：id   domain ID
* 输出参数：
* 返 回 值：
* 其它说明：无
* 修改日期      版本号  修改人      修改内容
* ---------------------------------------------------------------------------------------
* 2011/08/12    V1.0    jixp         创建
****************************************************************************************/
VmInstanceState SimulateDriver::GetDomainState(const string& name)
{
    return InvertToVmState(SimDomGetState(name));
}

/****************************************************************************************
* 函数名称：GetDomainIDByName
* 功能描述：根据实例名获得domid
* 访问的表：无
* 修改的表：无
* 输入参数：无
* 输出参数：
* 返 回 值：
* 其它说明：无
* 修改日期      版本号  修改人      修改内容
* ---------------------------------------------------------------------------------------
* 2011/08/12    V1.0    lixch         创建
****************************************************************************************/
int SimulateDriver::GetDomainIDByName(const string& domname)
{
    return SimDomGetId(domname);
}

/****************************************************************************************
* 函数名称：GetDomainDescByName
* 功能描述：根据实例名获得该实例的描述信息
* 访问的表：无
* 修改的表：无
* 输入参数：无
* 输出参数：
* 返 回 值：
* 其它说明：无
* 修改日期      版本号  修改人      修改内容
* ---------------------------------------------------------------------------------------
* 2012/08/27    V1.0    lixch        创建
****************************************************************************************/
string SimulateDriver::GetDomainDescByName(const string& domname)
{
    string desc;

    SimDomGetDesc(domname, desc);
    return desc;
}

/****************************************************************************************
* 函数名称：GetDomainDescByName
* 功能描述：根据实例名获得该实例的描述信息
* 访问的表：无
* 修改的表：无
* 输入参数：无
* 输出参数：
* 返 回 值：
* 其它说明：该注释，需要升级到libvirt9.1.2后，接触限值
* 修改日期      版本号  修改人      修改内容
* ---------------------------------------------------------------------------------------
* 2012/08/27    V1.0    lixch        创建
****************************************************************************************/
int SimulateDriver::SetDomainDescByName(const string& domname, const string& desc)
{
    return 0;
}


/****************************************************************************************
* 函数名称：DestroyDomain
* 功能描述：根据domain ID 制终止运行相应的虚拟机
* 访问的表：无
* 修改的表：无
* 输入参数：无
* 输出参数：
* 返 回 值：
* 其它说明：无
* 修改日期      版本号  修改人      修改内容
* ---------------------------------------------------------------------------------------
* 2011/08/12    V1.0    lixch         创建
****************************************************************************************/
int SimulateDriver::DestroyDomain(const string &dom_name)
{  
    return SimDomShutDown(dom_name);
}

// 向虚拟机插入USB盘
int SimulateDriver::AddUsb(const string &dom_name, int vendor_id, int product_id)
{
    return SUCCESS;
}

// 从虚拟机拔出USB盘
int SimulateDriver::DelUsb(const string &dom_name, int vendor_id, int product_id)
{
    return SUCCESS;
}

// 从虚拟机拔出USB盘
int SimulateDriver::DelAndAddUsb(const string &dom_name, int vendor_id, int product_id)
{
    return SUCCESS;
}


