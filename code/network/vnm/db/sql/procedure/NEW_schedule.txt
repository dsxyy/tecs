


--调度模块 检查资源 mac 是否可用 
CREATE OR REPLACE FUNCTION pf_net_check_schedule_resource_mac(in_netplane_uuid character varying, in_mac_num integer)
 RETURNS integer AS
$BODY$
DECLARE
  result  integer;
  is_conflict integer;
  is_exist integer; 
  is_same integer; 
  total_num numeric(19,0) := 0;
  alloc_num numeric(19,0) := 0;
  free_num numeric(19,0) := 0;
  -- 错误返回码定义
  RTN_OPERATOR_FAILED integer := 1;
  RTN_HAS_SAME_ITEM integer := 2;
  RTN_ITEM_CONFLICT integer := 3;
  RTN_ITEM_NO_EXIST integer := 4;
  RTN_PARAM_INVALID integer := 7;
  RTN_PG_MUST_CFG_NETPLANE integer := 13;
  RTN_MUST_CFG_VALID_RANGE   integer := 14;
  RTN_NO_MAC_RESOURCE  integer := 15;
BEGIN
  result := 0;
  
  SELECT count(*) INTO is_exist FROM mac_range a, netplane b WHERE a.netplane_id = b.id AND b.uuid = in_netplane_uuid;
  SELECT sum(mac_end_num - mac_begin_num +1) INTO total_num FROM mac_range a, netplane b WHERE a.netplane_id = b.id AND b.uuid = in_netplane_uuid;
  IF is_exist <= 0 THEN 
      result := RTN_NO_MAC_RESOURCE;
      return result;
  END IF;
  
  SELECT count(*) INTO alloc_num FROM mac_pool a, netplane b WHERE a.netplane_id = b.id AND b.uuid = in_netplane_uuid;
  
  free_num := (total_num - alloc_num);
  free_num := (free_num - in_mac_num);
  IF free_num < 0 THEN 
      result := RTN_NO_MAC_RESOURCE;
      return result;
  END IF;
    
  return result;
END
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
ALTER FUNCTION pf_net_check_schedule_resource_mac(in_netplane_uuid character varying,integer) OWNER TO tecs;
  

--调度模块 检查资源 IP 是否可用 
CREATE OR REPLACE FUNCTION pf_net_check_schedule_resource_ip(in_logicnetwork_uuid character varying, in_ip_num integer)
 RETURNS integer AS
$BODY$
DECLARE
  result  integer;
  is_conflict integer;
  is_exist integer; 
  is_same integer; 
  total_num numeric(19,0) := 0;
  alloc_num numeric(19,0) := 0;
  free_num numeric(19,0) := 0;
  -- 错误返回码定义
  RTN_OPERATOR_FAILED integer := 1;
  RTN_HAS_SAME_ITEM integer := 2;
  RTN_ITEM_CONFLICT integer := 3;
  RTN_ITEM_NO_EXIST integer := 4;
  RTN_PARAM_INVALID integer := 7;
  RTN_PG_MUST_CFG_NETPLANE integer := 13;
  RTN_MUST_CFG_VALID_RANGE   integer := 14;
  RTN_NO_MAC_RESOURCE  integer := 15;
BEGIN
  result := 0;

  SELECT count(*) INTO is_exist FROM logic_network_ip_range a, logic_network b WHERE a.logic_network_id = b.id AND b.uuid = in_logicnetwork_uuid AND b.ip_bootprotocolmode = 0;
  IF is_exist <= 0 THEN 
      return result;
  END IF;
  
  SELECT count(*) INTO is_exist FROM logic_network_ip_range a, logic_network b WHERE a.logic_network_id = b.id AND b.uuid = in_logicnetwork_uuid;
  SELECT sum(ip_end_num - ip_begin_num +1) INTO total_num  FROM logic_network_ip_range a, logic_network b WHERE a.logic_network_id = b.id AND b.uuid = in_logicnetwork_uuid;
  IF is_exist <= 0 THEN 
      result := RTN_NO_MAC_RESOURCE;
      return result;
  END IF;
  
  SELECT count(*) INTO alloc_num FROM logic_network_ip_pool a, logic_network b WHERE a.logic_network_id = b.id AND b.uuid = in_logicnetwork_uuid;
  free_num := (total_num - alloc_num);
  free_num := (free_num - in_ip_num);
  IF free_num < 0 THEN 
      result := RTN_NO_MAC_RESOURCE;
      return result;
  END IF;
    
  return result;
END
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
ALTER FUNCTION pf_net_check_schedule_resource_ip( character varying,integer) OWNER TO tecs;


--调度模块 检查资源 vlan 是否可用 
CREATE OR REPLACE FUNCTION pf_net_check_schedule_resource_vlan(in_project_id numeric(19,0), in_vmpg_uuid character varying)
 RETURNS integer AS
$BODY$
DECLARE
  result  integer;
  is_conflict integer;
  is_exist integer; 
  is_same integer; 
  total_num numeric(19,0) := 0;
  alloc_num numeric(19,0) := 0;
  free_num numeric(19,0) := 0;
  
  switchportmode integer;
  isolateno integer;
  pgtype integer;
  
  netplaneid numeric(19,0);
  -- 错误返回码定义
  RTN_OPERATOR_FAILED integer := 1;
  RTN_HAS_SAME_ITEM integer := 2;
  RTN_ITEM_CONFLICT integer := 3;
  RTN_ITEM_NO_EXIST integer := 4;
  RTN_PARAM_INVALID integer := 7;
  RTN_PG_MUST_CFG_NETPLANE integer := 13;
  RTN_MUST_CFG_VALID_RANGE   integer := 14;
  RTN_NO_MAC_RESOURCE  integer := 15;
BEGIN
  result := 0;
  
  -- vm pg, switchport_mode 
  SELECT count(*) INTO is_exist FROM port_group WHERE uuid = in_vmpg_uuid AND netplane_id is not null;
  SELECT switchport_mode INTO switchportmode FROM port_group WHERE uuid = in_vmpg_uuid;
  SELECT pg_type INTO pgtype FROM port_group WHERE uuid = in_vmpg_uuid;
  SELECT netplane_id INTO netplaneid FROM port_group WHERE uuid = in_vmpg_uuid;
  IF is_exist <= 0 THEN 
      result := RTN_ITEM_NO_EXIST;
      return result;
  END IF;
  
  -- 必须是vm pg, pg_type = 20/21
  IF pgtype >= 20 THEN 
      IF  pgtype <= 21 THEN 
          result := 0;
      ELSE
          result := RTN_PARAM_INVALID;
          return result;
      END IF;
  END IF;
  
  -- 如果trunk， vlan资源认为是ok的
  IF switchportmode = 0 THEN 
      result := 0;
      return result;
  END IF;
  
  -- access 模式 vm_share 
  IF switchportmode = 1 THEN 
     IF pgtype = 20 THEN 
         result := 0;
         return result;     
     END IF;
  END IF;
  
  -- access 模式 vm_private 
  SELECT count(*) INTO is_exist FROM port_group a, pg_switchport_access_isolate b WHERE a.id = b.pg_id AND a.uuid = in_vmpg_uuid;
  SELECT isolate_no INTO isolateno FROM port_group a, pg_switchport_access_isolate b WHERE a.id = b.pg_id AND a.uuid = in_vmpg_uuid;
  IF is_exist <= 0 THEN 
      result := RTN_ITEM_NO_EXIST;
      return result;
  END IF;
  
  -- vlan_map project_id +  isolate_no 
  SELECT count(*) INTO is_exist FROM vlan_map WHERE project_id = in_project_id AND isolate_no = isolateno;
  IF is_exist > 0 THEN 
      result := 0;
      return result;
  END IF;
  
  --vlan_range   
  SELECT count(*) INTO is_exist FROM vlan_range WHERE netplane_id = netplaneid;
  SELECT sum(vlan_end - vlan_begin +1) INTO total_num  FROM vlan_range WHERE netplane_id = netplaneid;
  IF is_exist <= 0 THEN 
      result := RTN_NO_MAC_RESOURCE;
      return result;
  END IF;
  
  SELECT count(*) INTO alloc_num FROM vlan_pool WHERE netplane_id = netplaneid;
  free_num := (total_num - alloc_num);
  IF free_num <= 0 THEN 
      result := RTN_NO_MAC_RESOURCE;
      return result;
  END IF;
    
  return result;
END
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
ALTER FUNCTION pf_net_check_schedule_resource_vlan(numeric(19,0), character varying) OWNER TO tecs;


-- 调度模块 获取 sdvs has wdg 
CREATE OR REPLACE FUNCTION pf_net_sdvs_schedule_has_wdg(in_netplane_id numeric(19,0), in_netplane_uuid character varying, 
                           in_is_sriov integer, in_is_loop integer, in_nic_num integer, in_is_bond_nic integer,
                           in_mtu integer , in_is_watchdog integer,
                           in_cluster_id numeric(19,0), in_cluster_name character varying, 
                           in_vna_id numeric(19,0) )                           
  RETURNS refcursor AS
$BODY$
DECLARE
    ref refcursor;
    is_exist integer; 
    check_ret integer;
    netplaneid numeric(19,0);
    
    RTN_ITEM_NO_EXIST integer := 4;
BEGIN
    /* input param valid: in_netplane_id, in_nic_num, in_mtu, in_is_loop          
     switch chioce  */   
    IF in_cluster_id > 0 THEN 
        IF in_vna_id > 0 THEN 
            OPEN ref FOR 
            SELECT  
                 in_netplane_uuid,in_is_sriov,in_is_loop,in_nic_num,in_is_bond_nic,in_mtu,in_is_watchdog,
                 cluster_name,vna_uuid,module_name, switch_uuid, switch_sriov_free_num, switch_free_num, 
                 pg_mtu,  port_uuid,
                 port_type,null,null,null,null
            FROM v_net_sdvs_schedule_has_wdg 
            WHERE 
                 cluster_name = in_cluster_name AND vna_id = in_vna_id AND
                 /* cluster_id = in_cluster_id AND vna_id = in_vna_id AND      */
                 /*cluster vna  filter*/
                 netplane_id = in_netplane_id AND port_is_loop = in_is_loop  
                 AND switch_free_num >= in_nic_num 
                 AND pg_mtu >= in_mtu;
                 
        ELSE
            OPEN ref FOR 
            SELECT  
                 in_netplane_uuid,in_is_sriov,in_is_loop,in_nic_num,in_is_bond_nic,in_mtu,in_is_watchdog,
                 cluster_name,vna_uuid,module_name, switch_uuid, switch_sriov_free_num, switch_free_num, 
                 pg_mtu,  port_uuid,
                 port_type,null,null,null,null
            FROM v_net_sdvs_schedule_has_wdg 
            WHERE
                 cluster_name = in_cluster_name AND 
                 /*cluster_id = in_cluster_id AND */   /* cluster filter   */
                 netplane_id = in_netplane_id AND port_is_loop = in_is_loop  
                 AND switch_free_num >= in_nic_num 
                 AND pg_mtu >= in_mtu;        
        END IF;             
    ELSE
         IF in_vna_id > 0 THEN 
            OPEN ref FOR 
            SELECT  
                 in_netplane_uuid,in_is_sriov,in_is_loop,in_nic_num,in_is_bond_nic,in_mtu,in_is_watchdog,
                 cluster_name,vna_uuid,module_name, switch_uuid, switch_sriov_free_num, switch_free_num, 
                 pg_mtu,  port_uuid,
                 port_type,null,null,null,null
            FROM v_net_sdvs_schedule_has_wdg 
            WHERE 
                 vna_id = in_vna_id AND     /*  vna filter */
                 netplane_id = in_netplane_id AND port_is_loop = in_is_loop  
                 AND switch_free_num >= in_nic_num 
                 AND pg_mtu >= in_mtu;    
        ELSE
            OPEN ref FOR 
            SELECT  
                 in_netplane_uuid,in_is_sriov,in_is_loop,in_nic_num,in_is_bond_nic,in_mtu,in_is_watchdog,
                 cluster_name,vna_uuid,module_name, switch_uuid, switch_sriov_free_num, switch_free_num, 
                 pg_mtu,  port_uuid,
                 port_type,null,null,null,null
            FROM v_net_sdvs_schedule_has_wdg 
            WHERE netplane_id = in_netplane_id AND port_is_loop = in_is_loop  
                 AND switch_free_num >= in_nic_num 
                 AND pg_mtu >= in_mtu;        
        END IF;    
    END IF;         
    
    return ref;
END;
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
ALTER FUNCTION pf_net_sdvs_schedule_has_wdg(in_netplane_id numeric(19,0), in_netplane_uuid character varying, 
                           in_is_sriov integer, in_is_loop integer, in_nic_num integer, in_is_bond_nic integer,
                           in_mtu integer , in_is_watchdog integer,
                           in_cluster_id numeric(19,0), in_cluster_name character varying, 
                           in_vna_id numeric(19,0) ) OWNER TO tecs;                               


-- 调度模块 获取 sdvs no wdg 
CREATE OR REPLACE FUNCTION pf_net_sdvs_schedule_no_wdg(in_netplane_id numeric(19,0), in_netplane_uuid character varying, 
                           in_is_sriov integer, in_is_loop integer, in_nic_num integer, in_is_bond_nic integer,
                           in_mtu integer , in_is_watchdog integer,
                           in_cluster_id numeric(19,0), in_cluster_name character varying, 
                           in_vna_id numeric(19,0) )                           
  RETURNS refcursor AS
$BODY$
DECLARE
    ref refcursor;
    is_exist integer; 
    check_ret integer;
    netplaneid numeric(19,0);
    
    RTN_ITEM_NO_EXIST integer := 4;
BEGIN
    /* input param valid: in_netplane_id, in_nic_num, in_mtu, in_is_loop          
     switch chioce   */
    IF in_cluster_id > 0 THEN 
        IF in_vna_id > 0 THEN     
            OPEN ref FOR 
            SELECT  
                 in_netplane_uuid,in_is_sriov,in_is_loop,in_nic_num,in_is_bond_nic,in_mtu,in_is_watchdog,
                 cluster_name,vna_uuid,module_name, switch_uuid, switch_sriov_free_num, switch_free_num, 
                 pg_mtu,  port_uuid,
                 port_type,null,null,null,null
            FROM v_net_sdvs_schedule_no_wdg 
            WHERE 
                 cluster_name = in_cluster_name AND vna_id = in_vna_id AND 
                 /* cluster_id = in_cluster_id AND vna_id = in_vna_id AND */    /* cluster vna filter */
                 netplane_id = in_netplane_id AND port_is_loop = in_is_loop  
                 AND switch_free_num >= in_nic_num 
                 AND pg_mtu >= in_mtu;    
        ELSE
            OPEN ref FOR 
            SELECT  
                 in_netplane_uuid,in_is_sriov,in_is_loop,in_nic_num,in_is_bond_nic,in_mtu,in_is_watchdog,
                 cluster_name,vna_uuid,module_name, switch_uuid, switch_sriov_free_num, switch_free_num, 
                 pg_mtu,  port_uuid,
                 port_type,null,null,null,null
            FROM v_net_sdvs_schedule_no_wdg 
            WHERE 
                 cluster_name = in_cluster_name AND 
                 /* cluster_id = in_cluster_id AND */   /* cluster filter */
                 netplane_id = in_netplane_id AND port_is_loop = in_is_loop  
                 AND switch_free_num >= in_nic_num 
                 AND pg_mtu >= in_mtu;    
        END IF;
    ELSE
        IF in_vna_id > 0 THEN     
            OPEN ref FOR 
            SELECT  
                 in_netplane_uuid,in_is_sriov,in_is_loop,in_nic_num,in_is_bond_nic,in_mtu,in_is_watchdog,
                 cluster_name,vna_uuid,module_name, switch_uuid, switch_sriov_free_num, switch_free_num, 
                 pg_mtu,  port_uuid,
                 port_type,null,null,null,null
            FROM v_net_sdvs_schedule_no_wdg 
            WHERE 
                 vna_id = in_vna_id AND     /*  vna filter */
                 netplane_id = in_netplane_id AND port_is_loop = in_is_loop  
                 AND switch_free_num >= in_nic_num 
                 AND pg_mtu >= in_mtu;    
        ELSE
            OPEN ref FOR 
            SELECT  
                 in_netplane_uuid,in_is_sriov,in_is_loop,in_nic_num,in_is_bond_nic,in_mtu,in_is_watchdog,
                 cluster_name,vna_uuid,module_name, switch_uuid, switch_sriov_free_num, switch_free_num, 
                 pg_mtu,  port_uuid,
                 port_type,null,null,null,null
            FROM v_net_sdvs_schedule_no_wdg 
            WHERE 
                 netplane_id = in_netplane_id AND port_is_loop = in_is_loop  
                 AND switch_free_num >= in_nic_num 
                 AND pg_mtu >= in_mtu;    
        END IF;
    END IF;
    return ref;
END;
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
ALTER FUNCTION pf_net_sdvs_schedule_no_wdg(in_netplane_id numeric(19,0), in_netplane_uuid character varying, 
                           in_is_sriov integer, in_is_loop integer, in_nic_num integer, in_is_bond_nic integer,
                           in_mtu integer , in_is_watchdog integer,
                           in_cluster_id numeric(19,0), in_cluster_name character varying, 
                           in_vna_id numeric(19,0) ) OWNER TO tecs;        
                           


-- 调度模块 获取 edvs no bond no wdg 
CREATE OR REPLACE FUNCTION pf_net_edvs_schedule_no_bond_no_wdg(in_netplane_id numeric(19,0), in_netplane_uuid character varying, 
                           in_is_sriov integer, in_is_loop integer, in_nic_num integer, in_is_bond_nic integer,
                           in_mtu integer , in_is_watchdog integer,
                           in_cluster_id numeric(19,0),  in_cluster_name character varying, 
                           in_vna_id numeric(19,0) )                           
  RETURNS refcursor AS
$BODY$
DECLARE
    ref refcursor;
    is_exist integer; 
    check_ret integer;
    netplaneid numeric(19,0);
    
    RTN_ITEM_NO_EXIST integer := 4;
BEGIN
    /* input param valid: in_netplane_id, in_nic_num, in_mtu, in_is_loop          
     switch chioce  */
    /*
       edvs physical, switch_sriov_free_num 存放的是 physical口剩余可用VF数目
    */
    IF in_cluster_id > 0 THEN 
        IF in_vna_id > 0 THEN     
            OPEN ref FOR 
            SELECT  
                 in_netplane_uuid,in_is_sriov,in_is_loop,in_nic_num,in_is_bond_nic,in_mtu,in_is_watchdog,
                 cluster_name,vna_uuid,module_name, switch_uuid, 
                 port_free_sriovvf_num,port_free_sriovvf_num,
                 /* switch_sriov_free_num, switch_free_num, */
                 pg_mtu,  port_uuid,
                 port_type,null,null,null,null
            FROM v_net_edvs_schedule_no_bond_no_wdg 
            WHERE 
                 cluster_name = in_cluster_name AND vna_id = in_vna_id AND 
                 /* cluster_id = in_cluster_id AND vna_id = in_vna_id AND */     /* cluster vna filter */
                 netplane_id = in_netplane_id AND port_is_loop = in_is_loop  
                 AND switch_free_num >= in_nic_num 
                 AND pg_mtu >= in_mtu;        
        ELSE
            OPEN ref FOR 
            SELECT  
                 in_netplane_uuid,in_is_sriov,in_is_loop,in_nic_num,in_is_bond_nic,in_mtu,in_is_watchdog,
                 cluster_name,vna_uuid,module_name, switch_uuid, 
                 port_free_sriovvf_num,port_free_sriovvf_num,
                 /* switch_sriov_free_num, switch_free_num, */
                 pg_mtu,  port_uuid,
                 port_type,null,null,null,null
            FROM v_net_edvs_schedule_no_bond_no_wdg 
            WHERE 
                 cluster_name = in_cluster_name AND
                 /* cluster_id = in_cluster_id AND  */   /* cluster filter */
                 netplane_id = in_netplane_id AND port_is_loop = in_is_loop  
                 AND switch_free_num >= in_nic_num 
                 AND pg_mtu >= in_mtu;    
        END IF;
    ELSE
        IF in_vna_id > 0 THEN     
            OPEN ref FOR 
            SELECT  
                 in_netplane_uuid,in_is_sriov,in_is_loop,in_nic_num,in_is_bond_nic,in_mtu,in_is_watchdog,
                 cluster_name,vna_uuid,module_name, switch_uuid, 
                 port_free_sriovvf_num,port_free_sriovvf_num,
                 /* switch_sriov_free_num, switch_free_num, */
                 pg_mtu,  port_uuid,
                 port_type,null,null,null,null
            FROM v_net_edvs_schedule_no_bond_no_wdg 
            WHERE 
                 vna_id = in_vna_id AND     /* vna filter */
                 netplane_id = in_netplane_id AND port_is_loop = in_is_loop  
                 AND switch_free_num >= in_nic_num 
                 AND pg_mtu >= in_mtu;        
        ELSE
            OPEN ref FOR 
            SELECT  
                 in_netplane_uuid,in_is_sriov,in_is_loop,in_nic_num,in_is_bond_nic,in_mtu,in_is_watchdog,
                 cluster_name,vna_uuid,module_name, switch_uuid, 
                 port_free_sriovvf_num,port_free_sriovvf_num,
                 /* switch_sriov_free_num, switch_free_num, */
                 pg_mtu,  port_uuid,
                 port_type,null,null,null,null
            FROM v_net_edvs_schedule_no_bond_no_wdg 
            WHERE 
                 netplane_id = in_netplane_id AND port_is_loop = in_is_loop  
                 AND switch_free_num >= in_nic_num 
                 AND pg_mtu >= in_mtu;    
        END IF;
    END IF;    
    
    return ref;
END;
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
ALTER FUNCTION pf_net_edvs_schedule_no_bond_no_wdg(in_netplane_id numeric(19,0), in_netplane_uuid character varying, 
                           in_is_sriov integer, in_is_loop integer, in_nic_num integer, in_is_bond_nic integer,
                           in_mtu integer , in_is_watchdog integer,
                           in_cluster_id numeric(19,0),  in_cluster_name character varying, 
                           in_vna_id numeric(19,0)) OWNER TO tecs;                                   

-- 调度模块 获取 edvs has bond no wdg 
CREATE OR REPLACE FUNCTION pf_net_edvs_schedule_has_bond_no_wdg(in_netplane_id numeric(19,0), in_netplane_uuid character varying, 
                           in_is_sriov integer, in_is_loop integer, in_nic_num integer, in_is_bond_nic integer,
                           in_mtu integer , in_is_watchdog integer,
                           in_cluster_id numeric(19,0), in_cluster_name character varying, 
                           in_vna_id numeric(19,0))                               
  RETURNS refcursor AS
$BODY$
DECLARE
    ref refcursor;
    is_exist integer; 
    check_ret integer;
    netplaneid numeric(19,0);
    
    RTN_ITEM_NO_EXIST integer := 4;
BEGIN
    /* input param valid: in_netplane_id, in_nic_num, in_mtu, in_is_loop          
     switch chioce     */
    /*
       edvs bond, switch_sriov_free_num 存放的是 bond口剩余可用VF数目
    */
    IF in_cluster_id > 0 THEN 
        IF in_vna_id > 0 THEN         
            OPEN ref FOR 
            SELECT  
                 in_netplane_uuid,in_is_sriov,in_is_loop,in_nic_num,in_is_bond_nic,in_mtu,in_is_watchdog,
                 cluster_name,vna_uuid,module_name, switch_uuid, 
                 bond_free_sriovvf_num,bond_free_sriovvf_num, 
                 /*switch_sriov_free_num,switch_free_num, */ 
                 pg_mtu,  port_uuid,
                 port_type,bond_total_phy_num,bond_valid_phy_num,phy_port_uuid,phy_port_free_sriovvf_num
            FROM v_net_edvs_schedule_has_bond_no_wdg 
            WHERE             
                 cluster_name = in_cluster_name AND vna_id = in_vna_id AND 
                 /* cluster_id = in_cluster_id AND vna_id = in_vna_id AND */    /* cluster vna  filter */
                 netplane_id = in_netplane_id AND port_is_loop = in_is_loop  
                 AND switch_free_num >= in_nic_num 
                 AND pg_mtu >= in_mtu 
                 AND bond_valid_phy_num > 0 ;    
        ELSE
            OPEN ref FOR 
            SELECT  
                 in_netplane_uuid,in_is_sriov,in_is_loop,in_nic_num,in_is_bond_nic,in_mtu,in_is_watchdog,
                 cluster_name,vna_uuid,module_name, switch_uuid, 
                 bond_free_sriovvf_num,bond_free_sriovvf_num,
                 /* switch_sriov_free_num, switch_free_num,*/
                 pg_mtu,  port_uuid,
                 port_type,bond_total_phy_num,bond_valid_phy_num,phy_port_uuid,phy_port_free_sriovvf_num
            FROM v_net_edvs_schedule_has_bond_no_wdg 
            WHERE             
                 cluster_name = in_cluster_name AND 
                 /* cluster_id = in_cluster_id AND */    /* cluster vna filter */
                 netplane_id = in_netplane_id AND port_is_loop = in_is_loop  
                 AND switch_free_num >= in_nic_num 
                 AND pg_mtu >= in_mtu 
                 AND bond_valid_phy_num > 0 ;
        END IF;
    ELSE
        IF in_vna_id > 0 THEN         
            OPEN ref FOR 
            SELECT  
                 in_netplane_uuid,in_is_sriov,in_is_loop,in_nic_num,in_is_bond_nic,in_mtu,in_is_watchdog,
                 cluster_name,vna_uuid,module_name, switch_uuid, 
                 bond_free_sriovvf_num,bond_free_sriovvf_num,
                 /* switch_sriov_free_num, switch_free_num, */
                 pg_mtu,  port_uuid,
                 port_type,bond_total_phy_num,bond_valid_phy_num,phy_port_uuid,phy_port_free_sriovvf_num
            FROM v_net_edvs_schedule_has_bond_no_wdg 
            WHERE             
                 vna_id = in_vna_id AND     /* vna filter   */
                 netplane_id = in_netplane_id AND port_is_loop = in_is_loop  
                 AND switch_free_num >= in_nic_num 
                 AND pg_mtu >= in_mtu 
                 AND bond_valid_phy_num > 0 ;    
        ELSE
            OPEN ref FOR 
            SELECT  
                 in_netplane_uuid,in_is_sriov,in_is_loop,in_nic_num,in_is_bond_nic,in_mtu,in_is_watchdog,
                 cluster_name,vna_uuid,module_name, switch_uuid, 
                 bond_free_sriovvf_num,bond_free_sriovvf_num,
                 /* switch_sriov_free_num, switch_free_num, */
                 pg_mtu,  port_uuid,
                 port_type,bond_total_phy_num,bond_valid_phy_num,phy_port_uuid,phy_port_free_sriovvf_num
            FROM v_net_edvs_schedule_has_bond_no_wdg 
            WHERE             
                 netplane_id = in_netplane_id AND port_is_loop = in_is_loop  
                 AND switch_free_num >= in_nic_num 
                 AND pg_mtu >= in_mtu 
                 AND bond_valid_phy_num > 0 ;
        END IF;
    END IF;    
    
    return ref;
END;
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
ALTER FUNCTION pf_net_edvs_schedule_has_bond_no_wdg(in_netplane_id numeric(19,0), in_netplane_uuid character varying, 
                           in_is_sriov integer, in_is_loop integer, in_nic_num integer, in_is_bond_nic integer,
                           in_mtu integer , in_is_watchdog integer,
                           in_cluster_id numeric(19,0), in_cluster_name character varying, 
                           in_vna_id numeric(19,0)) OWNER TO tecs;            
                           

-- 调度模块 获取 edvs no bond has wdg 
CREATE OR REPLACE FUNCTION pf_net_edvs_schedule_no_bond_has_wdg(in_netplane_id numeric(19,0), in_netplane_uuid character varying, 
                           in_is_sriov integer, in_is_loop integer, in_nic_num integer, in_is_bond_nic integer,
                           in_mtu integer , in_is_watchdog integer,
                           in_cluster_id numeric(19,0), in_cluster_name character varying, 
                           in_vna_id numeric(19,0))                               
  RETURNS refcursor AS
$BODY$
DECLARE
    ref refcursor;
    is_exist integer; 
    check_ret integer;
    netplaneid numeric(19,0);
    
    RTN_ITEM_NO_EXIST integer := 4;
BEGIN
    /* input param valid: in_netplane_id, in_nic_num, in_mtu, in_is_loop          
     switch chioce  */ 
    /*
       edvs physical, switch_sriov_free_num 存放的是 phy口剩余可用VF数目
    */
    
    IF in_cluster_id > 0 THEN 
        IF in_vna_id > 0 THEN         
            OPEN ref FOR 
            SELECT  
                 in_netplane_uuid,in_is_sriov,in_is_loop,in_nic_num,in_is_bond_nic,in_mtu,in_is_watchdog,
                 cluster_name,vna_uuid,module_name, switch_uuid, 
                 port_free_sriovvf_num,port_free_sriovvf_num,
                 /* switch_sriov_free_num, switch_free_num,  */
                 pg_mtu,  port_uuid,
                 port_type,null,null,null,null
            FROM v_net_edvs_schedule_no_bond_has_wdg 
            WHERE 
                 cluster_name = in_cluster_name AND vna_id = in_vna_id AND 
                 -- cluster_id = in_cluster_id AND vna_id = in_vna_id AND     -- cluster vna filter
                 netplane_id = in_netplane_id AND port_is_loop = in_is_loop  
                 AND switch_free_num >= in_nic_num 
                 AND pg_mtu >= in_mtu ; 
        ELSE
            OPEN ref FOR 
            SELECT  
                 in_netplane_uuid,in_is_sriov,in_is_loop,in_nic_num,in_is_bond_nic,in_mtu,in_is_watchdog,
                 cluster_name,vna_uuid,module_name, switch_uuid, 
                 port_free_sriovvf_num,port_free_sriovvf_num,
                 /* switch_sriov_free_num, switch_free_num, */
                 pg_mtu,  port_uuid,
                 port_type,null,null,null,null
            FROM v_net_edvs_schedule_no_bond_has_wdg 
            WHERE 
                 cluster_name = in_cluster_name AND 
                 -- cluster_id = in_cluster_id AND     -- cluster vna filter
                 netplane_id = in_netplane_id AND port_is_loop = in_is_loop  
                 AND switch_free_num >= in_nic_num 
                 AND pg_mtu >= in_mtu ; 
        END IF;
    ELSE
        IF in_vna_id > 0 THEN         
            OPEN ref FOR 
            SELECT  
                 in_netplane_uuid,in_is_sriov,in_is_loop,in_nic_num,in_is_bond_nic,in_mtu,in_is_watchdog,
                 cluster_name,vna_uuid,module_name, switch_uuid, 
                 port_free_sriovvf_num,port_free_sriovvf_num,
                 /* switch_sriov_free_num, switch_free_num, */
                 pg_mtu,  port_uuid,
                 port_type,null,null,null,null
            FROM v_net_edvs_schedule_no_bond_has_wdg 
            WHERE 
                 vna_id = in_vna_id AND     -- cluster vna filter
                 netplane_id = in_netplane_id AND port_is_loop = in_is_loop  
                 AND switch_free_num >= in_nic_num 
                 AND pg_mtu >= in_mtu ; 
        ELSE
            OPEN ref FOR 
            SELECT  
                 in_netplane_uuid,in_is_sriov,in_is_loop,in_nic_num,in_is_bond_nic,in_mtu,in_is_watchdog,
                 cluster_name,vna_uuid,module_name, switch_uuid, 
                 port_free_sriovvf_num,port_free_sriovvf_num,
                 /* switch_sriov_free_num, switch_free_num, */
                 pg_mtu,  port_uuid,
                 port_type,null,null,null,null
            FROM v_net_edvs_schedule_no_bond_has_wdg 
            WHERE 
                 netplane_id = in_netplane_id AND port_is_loop = in_is_loop  
                 AND switch_free_num >= in_nic_num 
                 AND pg_mtu >= in_mtu ; 
        END IF;
    END IF;    
    
    return ref;
END;
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
ALTER FUNCTION pf_net_edvs_schedule_no_bond_has_wdg(in_netplane_id numeric(19,0), in_netplane_uuid character varying, 
                           in_is_sriov integer, in_is_loop integer, in_nic_num integer, in_is_bond_nic integer,
                           in_mtu integer , in_is_watchdog integer,
                           in_cluster_id numeric(19,0), in_cluster_name character varying, 
                           in_vna_id numeric(19,0)) OWNER TO tecs;            

-- 调度模块 获取 edvs has bond has wdg 
CREATE OR REPLACE FUNCTION pf_net_edvs_schedule_has_bond_has_wdg(in_netplane_id numeric(19,0), in_netplane_uuid character varying, 
                           in_is_sriov integer, in_is_loop integer, in_nic_num integer, in_is_bond_nic integer,
                           in_mtu integer , in_is_watchdog integer,
                           in_cluster_id numeric(19,0), in_cluster_name character varying, 
                           in_vna_id numeric(19,0))                               
  RETURNS refcursor AS
$BODY$
DECLARE
    ref refcursor;
    is_exist integer; 
    check_ret integer;
    netplaneid numeric(19,0);
    
    RTN_ITEM_NO_EXIST integer := 4;
BEGIN
    /* input param valid: in_netplane_id, in_nic_num, in_mtu, in_is_loop          
     switch chioce     */
    /*
       edvs bond, switch_sriov_free_num 存放的是 bond口剩余可用VF数目
    */
         
    IF in_cluster_id > 0 THEN 
        IF in_vna_id > 0 THEN     
            OPEN ref FOR 
            SELECT  
                 in_netplane_uuid,in_is_sriov,in_is_loop,in_nic_num,in_is_bond_nic,in_mtu,in_is_watchdog,
                 cluster_name,vna_uuid,module_name, switch_uuid, 
                 bond_free_sriovvf_num,bond_free_sriovvf_num,
                 /* switch_sriov_free_num, switch_free_num, */
                 pg_mtu,  port_uuid,
                 port_type,bond_total_phy_num,bond_valid_phy_num,phy_port_uuid,phy_port_free_sriovvf_num
            FROM v_net_edvs_schedule_has_bond_has_wdg 
            WHERE 
                 cluster_name = in_cluster_name AND vna_id = in_vna_id AND 
                 /* cluster_id = in_cluster_id AND vna_id = in_vna_id AND */    /* cluster vna filter */
                 netplane_id = in_netplane_id AND port_is_loop = in_is_loop  
                 AND switch_free_num >= in_nic_num 
                 AND pg_mtu >= in_mtu 
                 AND bond_valid_phy_num > 0 ;
        ELSE
            OPEN ref FOR 
            SELECT  
                 in_netplane_uuid,in_is_sriov,in_is_loop,in_nic_num,in_is_bond_nic,in_mtu,in_is_watchdog,
                 cluster_name,vna_uuid,module_name, switch_uuid, 
                 bond_free_sriovvf_num,bond_free_sriovvf_num,
                 /* switch_sriov_free_num, switch_free_num, */
                 pg_mtu,  port_uuid,
                 port_type,bond_total_phy_num,bond_valid_phy_num,phy_port_uuid,phy_port_free_sriovvf_num
            FROM v_net_edvs_schedule_has_bond_has_wdg 
            WHERE 
                 cluster_name = in_cluster_name AND 
                 /* cluster_id = in_cluster_id AND */    /*cluster vna filter*/
                 netplane_id = in_netplane_id AND port_is_loop = in_is_loop  
                 AND switch_free_num >= in_nic_num 
                 AND pg_mtu >= in_mtu 
                 AND bond_valid_phy_num > 0 ;
        END IF;
    ELSE
        IF in_vna_id > 0 THEN     
            OPEN ref FOR 
            SELECT  
                 in_netplane_uuid,in_is_sriov,in_is_loop,in_nic_num,in_is_bond_nic,in_mtu,in_is_watchdog,
                 cluster_name,vna_uuid,module_name, switch_uuid, 
                 bond_free_sriovvf_num,bond_free_sriovvf_num,
                 /* switch_sriov_free_num, switch_free_num, */
                 pg_mtu,  port_uuid,
                 port_type,bond_total_phy_num,bond_valid_phy_num,phy_port_uuid,phy_port_free_sriovvf_num
            FROM v_net_edvs_schedule_has_bond_has_wdg 
            WHERE 
                 vna_id = in_vna_id AND     /* cluster vna filter*/
                 netplane_id = in_netplane_id AND port_is_loop = in_is_loop  
                 AND switch_free_num >= in_nic_num 
                 AND pg_mtu >= in_mtu 
                 AND bond_valid_phy_num > 0 ;
        ELSE
            OPEN ref FOR 
            SELECT  
                 in_netplane_uuid,in_is_sriov,in_is_loop,in_nic_num,in_is_bond_nic,in_mtu,in_is_watchdog,
                 cluster_name,vna_uuid,module_name, switch_uuid, 
                 bond_free_sriovvf_num,bond_free_sriovvf_num,
                 /* switch_sriov_free_num, switch_free_num, */
                 pg_mtu,  port_uuid,
                 port_type,bond_total_phy_num,bond_valid_phy_num,phy_port_uuid,phy_port_free_sriovvf_num
            FROM v_net_edvs_schedule_has_bond_has_wdg 
            WHERE 
                 netplane_id = in_netplane_id AND port_is_loop = in_is_loop  
                 AND switch_free_num >= in_nic_num 
                 AND pg_mtu >= in_mtu 
                 AND bond_valid_phy_num > 0 ;
        END IF;
    END IF;    
    
    return ref;
END;
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
ALTER FUNCTION pf_net_edvs_schedule_has_bond_has_wdg(in_netplane_id numeric(19,0), in_netplane_uuid character varying, 
                           in_is_sriov integer, in_is_loop integer, in_nic_num integer, in_is_bond_nic integer,
                           in_mtu integer , in_is_watchdog integer,
                           in_cluster_id numeric(19,0), in_cluster_name character varying, 
                           in_vna_id numeric(19,0)) OWNER TO tecs;            
                           
                            

-- 调度模块 获取 switch port vna list
CREATE OR REPLACE FUNCTION pf_net_schedule(in_netplane_uuid character varying, 
                           in_is_sriov integer, in_is_loop integer, in_nic_num integer, in_is_bond_nic integer,
                           in_mtu integer , in_is_watchdog integer)
  RETURNS refcursor AS
$BODY$
DECLARE
    ref refcursor;
    is_exist integer; 
    check_ret integer;
    netplaneid numeric(19,0);
    
    RTN_ITEM_NO_EXIST integer := 4;
BEGIN
   
    SELECT count(*) INTO is_exist  FROM netplane WHERE uuid = in_netplane_uuid;
    SELECT id INTO netplaneid  FROM netplane WHERE uuid = in_netplane_uuid;
    IF is_exist <= 0 THEN 
        -- 直接返回 参数有误
        return ref;
    END IF;
                
    -- switch chioce 
IF     in_is_watchdog <= 0 THEN     
    IF in_is_sriov > 0 THEN       
        IF in_is_bond_nic > 0 THEN 
            return pf_net_edvs_schedule_has_bond_no_wdg(netplaneid, in_netplane_uuid,in_is_sriov,in_is_loop,in_nic_num ,in_is_bond_nic,in_mtu,in_is_watchdog,0,'',0);             
        ELSE        
            return pf_net_edvs_schedule_no_bond_no_wdg(netplaneid, in_netplane_uuid,in_is_sriov,in_is_loop,in_nic_num ,in_is_bond_nic,in_mtu,in_is_watchdog,0,'',0);             
        END IF;
    ELSE
        return pf_net_sdvs_schedule_no_wdg(netplaneid, in_netplane_uuid,in_is_sriov,in_is_loop,in_nic_num ,in_is_bond_nic,in_mtu,in_is_watchdog,0,'',0);    
    END IF;
ELSE
    IF in_is_sriov > 0 THEN       
        IF in_is_bond_nic > 0 THEN 
            return pf_net_edvs_schedule_has_bond_has_wdg(netplaneid, in_netplane_uuid,in_is_sriov,in_is_loop,in_nic_num ,in_is_bond_nic,in_mtu,in_is_watchdog,0,'',0);             
        ELSE        
            return pf_net_edvs_schedule_no_bond_has_wdg(netplaneid, in_netplane_uuid,in_is_sriov,in_is_loop,in_nic_num ,in_is_bond_nic,in_mtu,in_is_watchdog,0,'',0);             
        END IF;
    ELSE
        return pf_net_sdvs_schedule_has_wdg(netplaneid, in_netplane_uuid,in_is_sriov,in_is_loop,in_nic_num ,in_is_bond_nic,in_mtu,in_is_watchdog,0,'',0);    
    END IF;
END IF;
    
    return ref;
END;
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
ALTER FUNCTION pf_net_schedule(in_netplane_uuid character varying, 
                           in_is_sriov integer, in_is_loop integer, in_nic_num integer, in_is_bond_nic integer,
                           in_mtu integer , in_is_watchdog integer) OWNER TO tecs;    

                           
-- 调度模块 获取 switch port vna list (通过cluster)
CREATE OR REPLACE FUNCTION pf_net_schedule_by_cluster(in_netplane_uuid character varying, 
                           in_is_sriov integer, in_is_loop integer, in_nic_num integer, in_is_bond_nic integer,
                           in_mtu integer, in_cluster_name character varying, in_is_watchdog integer)
  RETURNS refcursor AS
$BODY$
DECLARE
    ref refcursor;
    is_exist integer; 
    check_ret integer;
    netplaneid numeric(19,0);
    clusterid  numeric(19,0);
    
    RTN_ITEM_NO_EXIST integer := 4;
BEGIN
   
    SELECT count(*) INTO is_exist  FROM netplane WHERE uuid = in_netplane_uuid;
    SELECT id INTO netplaneid  FROM netplane WHERE uuid = in_netplane_uuid;
    IF is_exist <= 0 THEN 
        -- 直接返回 参数有误
        return ref;
    END IF;
                    
    -- switch chioce 
IF     in_is_watchdog <= 0 THEN     
    IF in_is_sriov > 0 THEN       
        IF in_is_bond_nic > 0 THEN 
            return pf_net_edvs_schedule_has_bond_no_wdg(netplaneid, in_netplane_uuid,in_is_sriov,in_is_loop,in_nic_num ,in_is_bond_nic,in_mtu,in_is_watchdog,1,in_cluster_name,0);             
        ELSE        
            return pf_net_edvs_schedule_no_bond_no_wdg(netplaneid, in_netplane_uuid,in_is_sriov,in_is_loop,in_nic_num ,in_is_bond_nic,in_mtu,in_is_watchdog,1,in_cluster_name,0);             
        END IF;
    ELSE
        return pf_net_sdvs_schedule_no_wdg(netplaneid, in_netplane_uuid,in_is_sriov,in_is_loop,in_nic_num ,in_is_bond_nic,in_mtu,in_is_watchdog,1,in_cluster_name,0);    
    END IF;
ELSE
    IF in_is_sriov > 0 THEN       
        IF in_is_bond_nic > 0 THEN 
            return pf_net_edvs_schedule_has_bond_has_wdg(netplaneid, in_netplane_uuid,in_is_sriov,in_is_loop,in_nic_num ,in_is_bond_nic,in_mtu,in_is_watchdog,1,in_cluster_name,0);             
        ELSE        
            return pf_net_edvs_schedule_no_bond_has_wdg(netplaneid, in_netplane_uuid,in_is_sriov,in_is_loop,in_nic_num ,in_is_bond_nic,in_mtu,in_is_watchdog,1,in_cluster_name,0);             
        END IF;
    ELSE
        return pf_net_sdvs_schedule_has_wdg(netplaneid, in_netplane_uuid,in_is_sriov,in_is_loop,in_nic_num ,in_is_bond_nic,in_mtu,in_is_watchdog,1,in_cluster_name,0);    
    END IF;
END IF;
    
    return ref;
END;
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
ALTER FUNCTION pf_net_schedule_by_cluster(in_netplane_uuid character varying, 
                           in_is_sriov integer, in_is_loop integer, in_nic_num integer, in_is_bond_nic integer,
                           in_mtu integer, in_cluster_name character varying, in_is_watchdog integer) OWNER TO tecs;    
                           

-- 调度模块 获取 switch port vna list (通过vna)
CREATE OR REPLACE FUNCTION pf_net_schedule_by_vna(in_netplane_uuid character varying, 
                           in_is_sriov integer, in_is_loop integer, in_nic_num integer, in_is_bond_nic integer,
                           in_mtu integer, in_vna_uuid character varying, in_is_watchdog integer)
  RETURNS refcursor AS
$BODY$
DECLARE
    ref refcursor;
    is_exist integer; 
    check_ret integer;
    netplaneid numeric(19,0);
    vnaid numeric(19,0);
    
    RTN_ITEM_NO_EXIST integer := 4;
BEGIN
   
    SELECT count(*) INTO is_exist  FROM netplane WHERE uuid = in_netplane_uuid;
    SELECT id INTO netplaneid  FROM netplane WHERE uuid = in_netplane_uuid;
    IF is_exist <= 0 THEN 
        -- 直接返回 参数有误
        return ref;
    END IF;

    SELECT count(*) INTO is_exist  FROM vna WHERE vna_uuid = in_vna_uuid;
    SELECT id INTO vnaid  FROM vna WHERE vna_uuid = in_vna_uuid;
    IF is_exist <= 0 THEN 
        -- 直接返回 参数有误
        return ref;
    END IF;
    
    -- switch chioce 
IF     in_is_watchdog <= 0 THEN     
    IF in_is_sriov > 0 THEN       
        IF in_is_bond_nic > 0 THEN 
            return pf_net_edvs_schedule_has_bond_no_wdg(netplaneid, in_netplane_uuid,in_is_sriov,in_is_loop,in_nic_num ,in_is_bond_nic,in_mtu,in_is_watchdog,0,'',vnaid);             
        ELSE        
            return pf_net_edvs_schedule_no_bond_no_wdg(netplaneid, in_netplane_uuid,in_is_sriov,in_is_loop,in_nic_num ,in_is_bond_nic,in_mtu,in_is_watchdog,0,'',vnaid);             
        END IF;
    ELSE
        return pf_net_sdvs_schedule_no_wdg(netplaneid, in_netplane_uuid,in_is_sriov,in_is_loop,in_nic_num ,in_is_bond_nic,in_mtu,in_is_watchdog,0,'',vnaid);    
    END IF;
ELSE
    IF in_is_sriov > 0 THEN       
        IF in_is_bond_nic > 0 THEN 
            return pf_net_edvs_schedule_has_bond_has_wdg(netplaneid, in_netplane_uuid,in_is_sriov,in_is_loop,in_nic_num ,in_is_bond_nic,in_mtu,in_is_watchdog,0,'',vnaid);             
        ELSE        
            return pf_net_edvs_schedule_no_bond_has_wdg(netplaneid, in_netplane_uuid,in_is_sriov,in_is_loop,in_nic_num ,in_is_bond_nic,in_mtu,in_is_watchdog,0,'',vnaid);             
        END IF;
    ELSE
        return pf_net_sdvs_schedule_has_wdg(netplaneid, in_netplane_uuid,in_is_sriov,in_is_loop,in_nic_num ,in_is_bond_nic,in_mtu,in_is_watchdog,0,'',vnaid);    
    END IF;
END IF;
    
    return ref;
END;
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
ALTER FUNCTION pf_net_schedule_by_vna(in_netplane_uuid character varying, 
                           in_is_sriov integer, in_is_loop integer, in_nic_num integer, in_is_bond_nic integer,
                           in_mtu integer, in_vna_uuid character varying, in_is_watchdog integer) OWNER TO tecs;    



-- 调度模块 获取 switch port vna list (通过project id)
CREATE OR REPLACE FUNCTION pf_net_schedule_query_deploy_by_project(in_project_id numeric(19,0), 
                           in_is_sriov integer, in_is_loop integer)
  RETURNS refcursor AS
$BODY$
DECLARE
    ref refcursor;
    is_exist integer; 
    check_ret integer;
    netplaneid numeric(19,0);
    
    RTN_ITEM_NO_EXIST integer := 4;
BEGIN
                   
    -- switch chioce     
    IF in_is_sriov > 0 THEN       
        IF in_is_loop > 0 THEN 
            OPEN ref FOR 
            SELECT distinct 
               in_project_id,logic_network_uuid,in_is_sriov,in_is_loop,
               cluster_name,vna_uuid,module_name, switch_uuid, port_uuid
            FROM v_net_vsi_deploy_vna_switch_port 
            WHERE project_id = in_project_id  
              AND is_sriov = 1  AND is_loop = 1;
        ELSE        
            OPEN ref FOR 
            SELECT distinct 
               in_project_id,logic_network_uuid,in_is_sriov,in_is_loop,
               cluster_name,vna_uuid,module_name, switch_uuid, port_uuid
            FROM v_net_vsi_deploy_vna_switch_port 
            WHERE project_id = in_project_id 
               AND is_sriov = 1  AND is_loop = 0;
        END IF;
    ELSE
        IF in_is_loop > 0 THEN 
            OPEN ref FOR 
            SELECT distinct 
               in_project_id,logic_network_uuid,in_is_sriov,in_is_loop,
               cluster_name,vna_uuid,module_name, switch_uuid, port_uuid
            FROM v_net_vsi_deploy_vna_switch_port 
            WHERE project_id = in_project_id  AND is_sriov = 0  
               AND is_loop = 1;        
        ELSE        
            OPEN ref FOR 
            SELECT distinct 
               in_project_id,logic_network_uuid,in_is_sriov,in_is_loop,
               cluster_name,vna_uuid,module_name, switch_uuid, port_uuid
            FROM v_net_vsi_deploy_vna_switch_port 
            WHERE project_id = in_project_id  AND is_sriov = 0  
               AND is_loop = 0;    
        END IF;
    END IF;
    return ref;
END;
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
ALTER FUNCTION  pf_net_schedule_query_deploy_by_project(in_project_id numeric(19,0), 
                           in_is_sriov integer, in_is_loop integer) OWNER TO tecs;           



-- 调度模块 获取 switch port vna list (通过project id, logicnetwork)
CREATE OR REPLACE FUNCTION pf_net_schedule_query_deploy_by_project_ln(in_project_id numeric(19,0), in_lgnetwork_uuid character varying,
                           in_is_sriov integer, in_is_loop integer)
  RETURNS refcursor AS
$BODY$
DECLARE
    ref refcursor;
    is_exist integer; 
    check_ret integer;
    netplaneid numeric(19,0);
    
    RTN_ITEM_NO_EXIST integer := 4;
BEGIN
                   
    -- switch chioce     
    IF in_is_sriov > 0 THEN       
        IF in_is_loop > 0 THEN 
            OPEN ref FOR 
            SELECT distinct 
               in_project_id,in_lgnetwork_uuid,in_is_sriov,in_is_loop,
               cluster_name,vna_uuid,module_name, switch_uuid, port_uuid
            FROM v_net_vsi_deploy_vna_switch_port 
            WHERE project_id = in_project_id  AND logic_network_uuid = in_lgnetwork_uuid 
              AND is_sriov = 1  AND is_loop = 1;
        ELSE        
            OPEN ref FOR 
            SELECT distinct 
               in_project_id,in_lgnetwork_uuid,in_is_sriov,in_is_loop,
               cluster_name,vna_uuid,module_name, switch_uuid, port_uuid
            FROM v_net_vsi_deploy_vna_switch_port 
            WHERE project_id = in_project_id AND logic_network_uuid = in_lgnetwork_uuid 
               AND is_sriov = 1  AND is_loop = 0;
        END IF;
    ELSE
        IF in_is_loop > 0 THEN 
            OPEN ref FOR 
            SELECT distinct 
               in_project_id,in_lgnetwork_uuid,in_is_sriov,in_is_loop,
               cluster_name,vna_uuid,module_name, switch_uuid, port_uuid
            FROM v_net_vsi_deploy_vna_switch_port 
            WHERE project_id = in_project_id  AND logic_network_uuid = in_lgnetwork_uuid  AND is_sriov = 0  
               AND is_loop = 1;        
        ELSE        
            OPEN ref FOR 
            SELECT distinct 
               in_project_id,in_lgnetwork_uuid,in_is_sriov,in_is_loop,
               cluster_name,vna_uuid,module_name, switch_uuid, port_uuid
            FROM v_net_vsi_deploy_vna_switch_port 
            WHERE project_id = in_project_id  AND logic_network_uuid = in_lgnetwork_uuid  AND is_sriov = 0  
               AND is_loop = 0;    
        END IF;
    END IF;
    return ref;
END;
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
ALTER FUNCTION  pf_net_schedule_query_deploy_by_project_ln(in_project_id numeric(19,0),  in_lgnetwork_uuid character varying,
                           in_is_sriov integer, in_is_loop integer) OWNER TO tecs;           						   


-- 调度模块 获取 wdg vna list ()
CREATE OR REPLACE FUNCTION pf_net_schedule_wdg()
  RETURNS refcursor AS
$BODY$
DECLARE
    ref refcursor;
    is_exist integer; 
    check_ret integer;
    netplaneid numeric(19,0);
    
    RTN_ITEM_NO_EXIST integer := 4;
BEGIN
                   
    OPEN ref FOR 
    SELECT 
      distinct 
      vna_uuid,module_name,cluster_name
    FROM v_net_vna_hc_cluster 
    WHERE         
      module_is_online = 1 
      AND vna_is_online = 1
      AND is_has_watchdog = 1 AND watchdog_is_online = 1;
    
    return ref;
END;
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
ALTER FUNCTION pf_net_schedule_wdg() OWNER TO tecs;            



-- 调度模块 获取 wdg vna list (通过cluster)
CREATE OR REPLACE FUNCTION pf_net_schedule_wdg_by_cluster(in_cluster character varying)
  RETURNS refcursor AS
$BODY$
DECLARE
    ref refcursor;
    is_exist integer; 
    check_ret integer;
    netplaneid numeric(19,0);
    
    RTN_ITEM_NO_EXIST integer := 4;
BEGIN
                   
    OPEN ref FOR 
    SELECT 
      distinct 
      vna_uuid,module_name,cluster_name
    FROM v_net_vna_hc_cluster 
    WHERE         
      module_is_online = 1 
      AND vna_is_online = 1
      AND is_has_watchdog = 1 AND watchdog_is_online = 1
      AND cluster_name = in_cluster;
    
    return ref;
END;
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
ALTER FUNCTION pf_net_schedule_wdg_by_cluster(in_cluster character varying) OWNER TO tecs;                    



-- 调度模块 获取 wdg vna list (通过vna)
CREATE OR REPLACE FUNCTION pf_net_schedule_wdg_by_vna(in_vna_uuid character varying)
  RETURNS refcursor AS
$BODY$
DECLARE
    ref refcursor;
    is_exist integer; 
    check_ret integer;
    netplaneid numeric(19,0);
    
    RTN_ITEM_NO_EXIST integer := 4;
BEGIN
                   
    OPEN ref FOR 
    SELECT 
      distinct 
      vna_uuid,module_name,cluster_name
    FROM v_net_vna_hc_cluster 
    WHERE         
      module_is_online = 1 
      AND vna_is_online = 1
      AND is_has_watchdog = 1 AND watchdog_is_online = 1
      AND vna_uuid = in_vna_uuid;
    
    return ref;
END;
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
ALTER FUNCTION pf_net_schedule_wdg_by_vna(in_vna_uuid character varying) OWNER TO tecs;                                       