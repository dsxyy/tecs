


CREATE OR REPLACE FUNCTION pf_net_check_add_vm( in_vm_id numeric(19,0), in_project_id numeric(19,0), in_is_enable_watchdog integer, in_watchdog_timeout integer, in_is_has_cluster integer,
           in_cluster_name character varying, in_is_has_host integer, in_host_name character varying)
 RETURNS integer AS
$BODY$
DECLARE
  result  integer;
  is_conflict integer;
  is_exist integer; 
  is_same integer; 
  uplinkpgid numeric(19,0);
  -- 错误返回码定义
  RTN_OPERATOR_FAILED integer := 1;
  RTN_HAS_SAME_ITEM integer := 2;
  RTN_ITEM_CONFLICT integer := 3;
  RTN_ITEM_NO_EXIST integer := 4;
  RTN_PARAM_INVALID integer := 7;
  RTN_SWITCH_MTU_LESS_PG integer := 8;
  RTN_SWITCH_UPLINKPORT_INVALID integer := 9;
  RTN_PORT_HAS_JOIN_OTHER_SWITCH integer := 10;
  RTN_PG_MUST_CFG_NETPLANE   integer := 13;
BEGIN
  result := 0;
  -- 入参检查 后面做
			  
  -- vm_id
  SELECT count(*) INTO is_exist FROM vm WHERE vm_id = in_vm_id;
  IF is_exist > 0 THEN 
      result := RTN_ITEM_CONFLICT;
      return result;
  END IF;
                    
  return result;
END
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
ALTER FUNCTION pf_net_check_add_vm( in_vm_id numeric(19,0), in_project_id numeric(19,0),in_is_enable_watchdog integer, in_watchdog_timeout integer, in_is_has_cluster integer,
           in_cluster_name character varying, in_is_has_host integer, in_host_name character varying) OWNER TO tecs;
		   

-- vm add 添加 
CREATE OR REPLACE FUNCTION pf_net_add_vm( in_vm_id numeric(19,0), in_project_id numeric(19,0),in_is_enable_watchdog integer, in_watchdog_timeout integer, in_is_has_cluster integer,
           in_cluster_name character varying, in_is_has_host integer, in_host_name character varying)
  RETURNS t_operate_result AS
$BODY$
DECLARE
  result  t_operate_result;
  is_exist integer;
  is_conflict integer;
  vnaid numeric(19,0);
  loopbackid numeric(19,0);
  -- 错误返回码定义
  RTN_OPERATOR_FAILED integer := 1;
  RTN_HAS_SAME_ITEM integer := 2;
  RTN_ITEM_CONFLICT integer := 3;
BEGIN
  result.ret := 0;
  -- 入参检查 后面做  
  
  result.ret := pf_net_check_add_vm(in_vm_id,in_project_id,in_is_enable_watchdog,in_watchdog_timeout,
      in_is_has_cluster,in_cluster_name,in_is_has_host,in_host_name);
  IF result.ret > 0 THEN 
     return result;
  END IF;
  
  -- 不支持重复添加 
  -- insert item 
  result.id = in_vm_id;
  --result.uuid := in_uuid;
  BEGIN 
      IF in_is_has_cluster > 0 THEN 
	      IF in_is_has_host > 0 THEN 
              INSERT INTO vm(vm_id,project_id,is_enable_watchdog,watchdog_timeout,cluster_name,host_name) 
                values(in_vm_id,in_project_id,in_is_enable_watchdog,in_watchdog_timeout,in_cluster_name,in_host_name );
		  ELSE
		      INSERT INTO vm(vm_id,project_id,is_enable_watchdog,watchdog_timeout,cluster_name) 
                values(in_vm_id,in_project_id,in_is_enable_watchdog,in_watchdog_timeout,in_cluster_name );
		  END IF;
	  ELSE
	     IF in_is_has_host > 0 THEN 
              INSERT INTO vm(vm_id,project_id,is_enable_watchdog,watchdog_timeout,host_name) 
                values(in_vm_id,in_project_id,in_is_enable_watchdog,in_watchdog_timeout,in_host_name );
		  ELSE
		      INSERT INTO vm(vm_id,project_id,is_enable_watchdog,watchdog_timeout) 
                values(in_vm_id,in_project_id,in_is_enable_watchdog,in_watchdog_timeout );
		  END IF;
	  END IF;
            
  EXCEPTION 
    WHEN others
    THEN
    result.ret := RTN_OPERATOR_FAILED;
  END;
  return result;
END
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
ALTER FUNCTION pf_net_add_vm( in_vm_id numeric(19,0), in_project_id numeric(19,0),in_is_enable_watchdog integer, in_watchdog_timeout integer, in_is_has_cluster integer,
           in_cluster_name character varying, in_is_has_host integer, in_host_name character varying)   OWNER TO tecs;

		   

CREATE OR REPLACE FUNCTION pf_net_check_modify_vm( in_vm_id numeric(19,0),in_project_id numeric(19,0), in_is_enable_watchdog integer, in_watchdog_timeout integer, in_is_has_cluster integer,
           in_cluster_name character varying, in_is_has_host integer, in_host_name character varying)
 RETURNS integer AS
$BODY$
DECLARE
  result  integer;
  is_conflict integer;
  is_exist integer; 
  is_same integer; 
  uplinkpgid numeric(19,0);
  -- 错误返回码定义
  RTN_OPERATOR_FAILED integer := 1;
  RTN_HAS_SAME_ITEM integer := 2;
  RTN_ITEM_CONFLICT integer := 3;
  RTN_ITEM_NO_EXIST integer := 4;
  RTN_PARAM_INVALID integer := 7;
  RTN_SWITCH_MTU_LESS_PG integer := 8;
  RTN_SWITCH_UPLINKPORT_INVALID integer := 9;
  RTN_PORT_HAS_JOIN_OTHER_SWITCH integer := 10;
  RTN_PG_MUST_CFG_NETPLANE   integer := 13;
BEGIN
  result := 0;
  -- 入参检查 后面做
			  
  -- vm_id
  SELECT count(*) INTO is_exist FROM vm WHERE vm_id = in_vm_id;
  IF is_exist <= 0 THEN 
      result := RTN_ITEM_NO_EXIST;
      return result;
  END IF;
  
  -- project id 不能变
  SELECT count(*) INTO is_exist FROM vm WHERE vm_id = in_vm_id AND project_id = in_project_id;
  IF is_exist <= 0 THEN 
      result := RTN_PARAM_INVALID;
      return result;
  END IF;
                    
  return result;
END
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
ALTER FUNCTION pf_net_check_modify_vm( in_vm_id numeric(19,0),in_project_id numeric(19,0), in_is_enable_watchdog integer, in_watchdog_timeout integer, in_is_has_cluster integer,
           in_cluster_name character varying, in_is_has_host integer, in_host_name character varying) OWNER TO tecs;
		   		   


-- vm add 添加 
CREATE OR REPLACE FUNCTION pf_net_modify_vm( in_vm_id numeric(19,0), in_project_id numeric(19,0),in_is_enable_watchdog integer, in_watchdog_timeout integer, in_is_has_cluster integer,
           in_cluster_name character varying, in_is_has_host integer, in_host_name character varying)
  RETURNS t_operate_result AS
$BODY$
DECLARE
  result  t_operate_result;
  is_exist integer;
  is_conflict integer;
  vnaid numeric(19,0);
  loopbackid numeric(19,0);
  -- 错误返回码定义
  RTN_OPERATOR_FAILED integer := 1;
  RTN_HAS_SAME_ITEM integer := 2;
  RTN_ITEM_CONFLICT integer := 3;
BEGIN
  result.ret := 0;
  -- 入参检查 后面做  
  
  result.ret := pf_net_check_modify_vm(in_vm_id, in_project_id,in_is_enable_watchdog,in_watchdog_timeout,
      in_is_has_cluster,in_cluster_name,in_is_has_host,in_host_name);
  IF result.ret > 0 THEN 
     return result;
  END IF;
  
  -- 不支持重复添加 
  -- insert item 
  result.id = in_vm_id;
  --result.uuid := in_uuid;
  BEGIN 
      IF in_is_has_cluster > 0 THEN 
	      IF in_is_has_host > 0 THEN 
              UPDATE vm SET is_enable_watchdog = in_is_enable_watchdog, watchdog_timeout = in_watchdog_timeout,
	             cluster_name = in_cluster_name, host_name = in_host_name
		         WHERE vm_id = in_vm_id;
		  ELSE
		      UPDATE vm SET is_enable_watchdog = in_is_enable_watchdog, watchdog_timeout = in_watchdog_timeout,
	             cluster_name = in_cluster_name ,host_name = null 
		         WHERE vm_id = in_vm_id;
		  END IF;
      ELSE
          IF in_is_has_host > 0 THEN 
              UPDATE vm SET is_enable_watchdog = in_is_enable_watchdog, watchdog_timeout = in_watchdog_timeout,
	             cluster_name = null, host_name = in_host_name
		         WHERE vm_id = in_vm_id;
		  ELSE
		      UPDATE vm SET is_enable_watchdog = in_is_enable_watchdog, watchdog_timeout = in_watchdog_timeout,
			     cluster_name = null ,host_name = null 
		         WHERE vm_id = in_vm_id;
		  END IF; 
      END IF;
	  
  EXCEPTION 
    WHEN others
    THEN
    result.ret := RTN_OPERATOR_FAILED;
  END;
  return result;
END
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
ALTER FUNCTION pf_net_modify_vm( in_vm_id numeric(19,0),in_project_id numeric(19,0), in_is_enable_watchdog integer, in_watchdog_timeout integer, in_is_has_cluster integer,
           in_cluster_name character varying, in_is_has_host integer, in_host_name character varying)   OWNER TO tecs;
				   

CREATE OR REPLACE FUNCTION pf_net_del_vm( in_vm_id numeric(19,0))
  RETURNS t_operate_result AS
$BODY$
DECLARE
  result  t_operate_result;
  is_exist integer;
  is_conflict integer;
  -- 错误返回码定义
  RTN_OPERATOR_FAILED integer := 1;
  RTN_HAS_SAME_ITEM integer := 2;
  RTN_ITEM_NO_EXIST integer := 4;
BEGIN
  result.ret := 0;
  -- 入参检查 后面做  
  
  -- vm_id
  SELECT count(*) INTO is_exist FROM vm WHERE vm_id = in_vm_id;
  IF is_exist <= 0 THEN 
      result.ret  := RTN_ITEM_NO_EXIST;
      return result;
  END IF;
  
  -- del item
  result.ret := 0;
  BEGIN 
    DELETE FROM vm WHERE vm_id = in_vm_id;
  EXCEPTION 
    WHEN others
    THEN
    result.ret := RTN_OPERATOR_FAILED;
  END;
  return result;
  
END
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
ALTER FUNCTION pf_net_del_vm( in_vm_id numeric(19,0))   OWNER TO tecs;


-- 查询接口 
CREATE OR REPLACE FUNCTION pf_net_query_vm(in_vm_id numeric(19,0))
  RETURNS t_vm_query AS
$BODY$
DECLARE
    result t_vm_query;
    is_exist integer; 
    taskid numeric(19,0);
    RTN_ITEM_NO_EXIST integer := 4;
BEGIN
    result.ret := 0;
    
    -- vna uuid 
    SELECT count(*) INTO is_exist FROM vm WHERE vm_id = in_vm_id;
    IF is_exist <= 0 THEN 
       result.ret := RTN_ITEM_NO_EXIST; 
       return result;
    END IF;  
      	
    SELECT vm_id INTO result.vm_id FROM vm WHERE vm_id = in_vm_id;
	SELECT project_id INTO result.project_id FROM vm WHERE vm_id = in_vm_id;
	SELECT is_enable_watchdog INTO result.is_enable_watchdog FROM vm WHERE vm_id = in_vm_id;
	SELECT watchdog_timeout INTO result.watchdog_timeout FROM vm WHERE vm_id = in_vm_id;
	
	SELECT cluster_name INTO result.cluster_name FROM vm WHERE vm_id = in_vm_id;
	SELECT host_name INTO result.host_name FROM vm WHERE vm_id = in_vm_id;
	
	-- is has clustername 
    SELECT count(*) INTO is_exist FROM vm  WHERE vm_id = in_vm_id AND cluster_name is not null;
    IF is_exist <= 0 THEN 
        result.is_has_cluster := 0;
    ELSE 
        result.is_has_cluster := 1;
    END IF;
	
	-- is has hostname 
    SELECT count(*) INTO is_exist FROM vm  WHERE vm_id = in_vm_id AND host_name is not null;
    IF is_exist <= 0 THEN 
        result.is_has_host := 0;
    ELSE 
        result.is_has_host := 1;
    END IF;
		
    return result;
END;
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
ALTER FUNCTION pf_net_query_vm(in_vm_id numeric(19,0)) OWNER TO tecs;		   
				   

CREATE OR REPLACE FUNCTION pf_net_query_vm_summary()
  RETURNS refcursor AS
$BODY$
DECLARE
    ref refcursor;
    is_exist integer; 
    vnaid numeric(19,0);
    RTN_ITEM_NO_EXIST integer := 4;
BEGIN
    
	OPEN ref FOR 
	SELECT 
	    vm_id,project_id,is_enable_watchdog,watchdog_timeout,
		CASE 
		   WHEN (cluster_name is null ) THEN
		   (0)
		   ELSE (1)
		END AS is_has_cluster,
		cluster_name,
		CASE 
		   WHEN (host_name is null ) THEN
		   (0)
		   ELSE (1)
		END AS is_has_host,
		host_name
	FROM vm ;
        
    return ref;
END;
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
ALTER FUNCTION pf_net_query_vm_summary() OWNER TO tecs;

		